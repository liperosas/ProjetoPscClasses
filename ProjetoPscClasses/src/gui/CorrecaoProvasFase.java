/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import classes.CartaoResposta;
import classes.Concursando;
import classes.DiaFase;
import classes.Fase;
import classes.Prova;
import fachada.Fachada;
import fachada.IFachada;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Antônio
 */
public class CorrecaoProvasFase extends javax.swing.JFrame {

    /**
     * Creates new form CorrecaoProvasFase
     */
    List<Concursando> concursandos;
    List<Prova> provas;
    IFachada fachada = Fachada.obterInstancia();

    public CorrecaoProvasFase(Fase fase) {
        try {
            initComponents();
            concursandos = new ArrayList<Concursando>();
            concursandos = fachada.calcularNotaMultiplaConcursandos(fase);
            provas = new ArrayList<Prova>();
            for (DiaFase diaFase : fase.getDiasFase()) {
                for (Prova prova : diaFase.getProvas()) {
                    provas.add(prova);
                }
            }
            this.carregarListaConcursandos();
            this.carregarListaProvasFase();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private CorrecaoProvasFase() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    public void carregarListaConcursandos() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"Nome", "CPF"});
        for (Concursando concursando : concursandos) {
            modelo.addRow(new Object[]{concursando.getNome(), concursando.getCpf()});
        }
        TableConcursandosFase.setModel(modelo);
    }

    public void carregarListaProvasFase() {
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"Área de Conhecimento", "Data da Prova"});
        for (Prova prova : provas) {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            modelo.addRow(new Object[]{prova.getGenero().getGenero(), sdf.format(prova.getDiaFase().getDataDia().getTime())});
        }
        TableProvasFase.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableConcursandosFase = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        TextValorMultipla = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TextValorDiscursiva = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableProvasFase = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        TableConcursandosFase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TableConcursandosFase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableConcursandosFaseMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableConcursandosFase);

        jLabel1.setText("Qntd. Acertos de Questões Multipla Escolha");

        TextValorMultipla.setEditable(false);

        jLabel2.setText("Qntd. Acertos de Questões Discursivas");

        TableProvasFase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TableProvasFase.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableProvasFaseMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableProvasFase);

        jButton1.setText("Inserir Valor");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Voltar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(TextValorMultipla, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(TextValorDiscursiva, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)))
                        .addGap(79, 79, 79))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextValorMultipla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextValorDiscursiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableConcursandosFaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableConcursandosFaseMouseClicked
        // TODO add your handling code here:
        if (TableConcursandosFase.getSelectedRow() != -1) {
            if (TableProvasFase.getSelectedRow() != -1) {
                for (CartaoResposta cartaoResposta : concursandos.get(TableConcursandosFase.getSelectedRow()).getCartoesResposta()) {
                    if (cartaoResposta.getProva().getId() == provas.get(TableProvasFase.getSelectedRow()).getId()) {
                        TextValorMultipla.setText(Integer.toString(cartaoResposta.getCorretaMultiplaEscolha()));
                        TextValorDiscursiva.setText(Integer.toString(cartaoResposta.getCorretaDiscursiva()));
                    }
                }
            }
        }
    }//GEN-LAST:event_TableConcursandosFaseMouseClicked

    private void TableProvasFaseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableProvasFaseMouseClicked
        // TODO add your handling code here:
        if (TableConcursandosFase.getSelectedRow() != -1) {
            if (TableProvasFase.getSelectedRow() != -1) {
                for (CartaoResposta cartaoResposta : concursandos.get(TableConcursandosFase.getSelectedRow()).getCartoesResposta()) {
                    if (cartaoResposta.getProva().getId() == provas.get(TableProvasFase.getSelectedRow()).getId()) {
                        TextValorMultipla.setText(Integer.toString(cartaoResposta.getCorretaMultiplaEscolha()));
                        TextValorDiscursiva.setText(Integer.toString(cartaoResposta.getCorretaDiscursiva()));
                    }
                }
            }
        }
    }//GEN-LAST:event_TableProvasFaseMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (TableConcursandosFase.getSelectedRow() != -1) {
            if (TableProvasFase.getSelectedRow() != -1) {
                for (CartaoResposta cartaoResposta : concursandos.get(TableConcursandosFase.getSelectedRow()).getCartoesResposta()) {
                    if (cartaoResposta.getProva().getId() == provas.get(TableProvasFase.getSelectedRow()).getId()) {
                        try {
                            cartaoResposta.setCorretaDiscursiva(Integer.parseInt(TextValorDiscursiva.getText()));
                            fachada.atualizarCartaoResposta(cartaoResposta);
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CorrecaoProvasFase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CorrecaoProvasFase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CorrecaoProvasFase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CorrecaoProvasFase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CorrecaoProvasFase().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableConcursandosFase;
    private javax.swing.JTable TableProvasFase;
    private javax.swing.JTextField TextValorDiscursiva;
    private javax.swing.JTextField TextValorMultipla;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
